<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="com.example.eshop" use-default-filters="true">
        <!-- 扫描时跳过@Controller注解的JAVA类 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/shop?serverTimezone=Asia/Shanghai"/>
        <property name="user" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!-- 配置sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="packagesToScan">
            <list>
                <value>com.example.eshop.domain</value>
            </list>
        </property>
    </bean>

    <!-- 配置transactionManager -->
    <tx:annotation-driven/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--&lt;!&ndash; 配置advice(通知) &ndash;&gt;
    <tx:advice id="advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    &lt;!&ndash; 配置aop &ndash;&gt;
    <aop:config>
        &lt;!&ndash; 定义切面，配置哪些包的类需要切入事务 &ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.example.eshop.serviceImpl.*.*(..))"/>
        &lt;!&ndash; aop:pointcut要写在aop:advisor上面，否则会报错 &ndash;&gt;
        <aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
    </aop:config>-->

    <!--&lt;!&ndash; 泛型类是不能实例化的，所以要加 lazy-init 属性 &ndash;&gt;
    <bean id="baseService" class="com.example.eshop.serviceImpl.BaseServiceImpl" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="categoryService" class="com.example.eshop.serviceImpl.CategoryServiceImpl" parent="baseService"/>
    <bean id="accountService" class="com.example.eshop.serviceImpl.AccountServiceImpl" parent="baseService"/>

    <bean id="baseController" class="com.example.eshop.controller.BaseController" scope="prototype" lazy-init="true">
        <property name="categoryService" ref="categoryService"/>
        <property name="accountService" ref="accountService"/>
    </bean>

    <bean id="categoryController" class="com.example.eshop.controller.CategoryController" parent="baseController" scope="prototype"/>-->
</beans>